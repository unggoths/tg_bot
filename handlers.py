from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.filters import CommandStart, Command
import app.keyboards as kb

router = Router()

@router.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer('–ü—Ä–∏–≤—ñ—Ç!üëã \n'
                         '–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ –Ω–∞—à–æ–≥–æ —Ä—ñ–µ–ª—Ç–æ—Ä—Å—å–∫–æ–≥–æ –±–æ—Ç–∞! üè°\n'
                         '–ú–∏ —Ç—É—Ç, —â–æ–± –¥–æ–ø–æ–º–æ–≥—Ç–∏ –≤–∞–º –∑–Ω–∞–π—Ç–∏ —ñ–¥–µ–∞–ª—å–Ω–µ –∂–∏—Ç–ª–æ –∞–±–æ –ø—Ä–æ–¥–∞—Ç–∏ –≤–∞—à—É –Ω–µ—Ä—É—Ö–æ–º—ñ—Å—Ç—å.\n'
                         '–ß–∏–º –º–æ–∂–µ–º–æ –¥–æ–ø–æ–º–æ–≥—Ç–∏ —Å—å–æ–≥–æ–¥–Ω—ñ? ü§î', reply_markup=kb.main)

@router.message(F.text == 'üí¨ –î–æ–ø–æ–º–æ–≥–∞')
async def cmd_help(message: Message):
    await message.answer('üí¨ –ü–æ—Ç—Ä—ñ–±–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞? –ú–∏ –∑–∞–≤–∂–¥–∏ –ø–æ—Ä—É—á! ü¶∏\n'
                         '–ù–∞–ø–∏—à—ñ—Ç—å, –∑ —è–∫–æ—é –ø—Ä–æ–±–ª–µ–º–æ—é –≤–∏ –∑—ñ—Ç–∫–Ω—É–ª–∏—Å—è, —ñ –º–∏ –∑ —Ä–∞–¥—ñ—Å—Ç—é –≤–∞–º –¥–æ–ø–æ–º–æ–∂–µ–º–æ. ü§ù')
# –ö—É–ø—ñ–≤–ª—è –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ

@router.message(F.text == 'üí∞ –ö—É–ø—ñ–≤–ª—è –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ')
async def buy(message: Message):
    await message.answer('üè° –ö—É–ø—ñ–≤–ª—è –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ ‚Äî —Ü–µ —Å–µ—Ä–π–æ–∑–Ω–∏–π –∫—Ä–æ–∫!\n'
                         '–û–±–µ—Ä—ñ—Ç—å, —â–æ —Å–∞–º–µ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å:', reply_markup=kb.buy)

@router.callback_query(F.data == 'buy_apartment')
async def buy_apartment(callback: CallbackQuery):
    await callback.message.answer('üèô –í–∏ —à—É–∫–∞—î—Ç–µ –∫–≤–∞—Ä—Ç–∏—Ä—É? –ü—Ä–µ–∫—Ä–∞—Å–Ω–∏–π –≤–∏–±—ñ—Ä! \n'
                                  '–°–∫—ñ–ª—å–∫–∏ –∫—ñ–º–Ω–∞—Ç –≤–∏ –±–∞–∂–∞—î—Ç–µ –º–∞—Ç–∏? üõè:', reply_markup=kb.apartment_type)

@router.callback_query(F.data.in_(['apartment_1', 'apartment_2', 'apartment_3', 'apartment_4', 'apartment_studio']))
async def apartment_rooms(callback: CallbackQuery):
    await callback.message.answer('‚úÖ –ì–∞—Ä–∞–∑–¥! –í–∏ –æ–±—Ä–∞–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä—É. \n'
                                  'üìç –¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å —Ä–∞–π–æ–Ω, —è–∫–∏–π –≤–∞–º –ø—ñ–¥—Ö–æ–¥–∏—Ç—å:', reply_markup=kb.district)

@router.callback_query(F.data == 'buy_house')
async def buy_house(callback: CallbackQuery):
    await callback.message.answer('üè† –û–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π —Ç–∏–ø –±—É–¥–∏–Ω–∫—É:\n'
                                  '–°–∫—ñ–ª—å–∫–∏ –ø–æ–≤–µ—Ä—Ö—ñ–≤ –º–∞—î –±—É—Ç–∏ —É –≤–∞—à–æ–º—É –¥–æ–º—ñ? üè¢', reply_markup=kb.house_floor)

@router.callback_query(F.data.in_(['one_floor', 'two_floors', 'three_floors']))
async def select_house_type(callback: CallbackQuery):
    await callback.message.answer('‚ú® –ß—É–¥–æ–≤–æ! –í–∏ –æ–±—Ä–∞–ª–∏ —Ç–∏–ø –±—É–¥–∏–Ω–∫—É. \n'
                                  'üè† –°–∫—ñ–ª—å–∫–∏ –∫—ñ–º–Ω–∞—Ç –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ? üõè', reply_markup=kb.house_rooms)

@router.callback_query(F.data.in_(['one_room', 'two_rooms', 'three_rooms_or_more']))
async def select_house_rooms(callback: CallbackQuery):
    await callback.message.answer('üìç –ß—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä! –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç –æ–±—Ä–∞–Ω–æ. \n'
                                  'üèô –¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π —Ä–∞–π–æ–Ω –º—ñ—Å—Ç–∞:', reply_markup=kb.district)
# –ó–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –∫—É–ø—ñ–≤–ª—è –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ

# –û—Ä–µ–Ω–¥–∞ –∂–∏—Ç–ª–∞
@router.message(F.text == 'üîë –û—Ä–µ–Ω–¥–∞ –∂–∏—Ç–ª–∞')
async def rent(message: Message):
    await message.answer('üîë –û—Ä–µ–Ω–¥–∞ –∂–∏—Ç–ª–∞ ‚Äî —Ü–µ –≤–∏–≥—ñ–¥–Ω–µ —Ä—ñ—à–µ–Ω–Ω—è! \n'
                         '–í–∏ —à—É–∫–∞—î—Ç–µ –∫–≤–∞—Ä—Ç–∏—Ä—É —á–∏ –±—É–¥–∏–Ω–æ–∫? üèò', reply_markup=kb.rent)

@router.callback_query(F.data == 'rent_apartment')
async def rent_apartment(callback: CallbackQuery):
    await callback.message.answer('üèô –û—Ä–µ–Ω–¥–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∏? –Ø–∫–∏–π —Ç–∏–ø –∫–≤–∞—Ä—Ç–∏—Ä–∏ –≤–∞—Å —Ü—ñ–∫–∞–≤–∏—Ç—å? üõè:', reply_markup=kb.apartment_type)

@router.callback_query(F.data.in_(['apartment_1', 'apartment_2', 'apartment_3', 'apartment_4', 'apartment_studio']))
async def select_apartment_rooms(callback: CallbackQuery):
    await callback.message.answer('‚úÖ –ì–∞—Ä–∞–∑–¥! –í–∏ –æ–±—Ä–∞–ª–∏ —Ç–∏–ø –∫–≤–∞—Ä—Ç–∏—Ä–∏. \n'
                                  'üìç –¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å —Ä–∞–π–æ–Ω –¥–ª—è –æ—Ä–µ–Ω–¥–∏:', reply_markup=kb.district)

@router.callback_query(F.data == 'rent_house')
async def rent_house(callback: CallbackQuery):
    await callback.message.answer('üè† –û—Ä–µ–Ω–¥–∞ –±—É–¥–∏–Ω–∫—É? –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –°–∫—ñ–ª—å–∫–∏ –ø–æ–≤–µ—Ä—Ö—ñ–≤ –≤–∞–º –ø–æ—Ç—Ä—ñ–±–Ω–æ? üè¢', reply_markup=kb.house_floor)

@router.callback_query(F.data.in_(['one_floor', 'two_floors', 'three_floors']))
async def select_house_floors(callback: CallbackQuery):
    await callback.message.answer('‚úÖ –í–∏ –æ–±—Ä–∞–ª–∏ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ–≤–µ—Ä—Ö—ñ–≤ —É –±—É–¥–∏–Ω–∫—É. \n'
                                  'üìç –¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π —Ä–∞–π–æ–Ω –¥–ª—è –æ—Ä–µ–Ω–¥–∏:', reply_markup=kb.district)
# –ó–∞–∫—ñ–Ω—á—É—î—Ç—å—Å—è –æ—Ä–µ–Ω–¥–∞ –∂–∏—Ç–ª–∞

# –ü—Ä–æ–¥–∞–∂ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ
@router.message(F.text == 'üè∑Ô∏è –ü—Ä–æ–¥–∞–∂ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ')
async def buy(message: Message):
    await message.answer('üíµ –ü—Ä–æ–¥–∞–∂ –Ω–µ—Ä—É—Ö–æ–º–æ—Å—Ç—ñ ‚Äî —Ü–µ —Å–µ—Ä–π–æ–∑–Ω–∏–π –∫—Ä–æ–∫!\n'
                         '–û–±–µ—Ä—ñ—Ç—å, —â–æ —Å–∞–º–µ –≤–∏ –ø–ª–∞–Ω—É—î—Ç–µ –ø—Ä–æ–¥–∞–≤–∞—Ç–∏:', reply_markup=kb.sell)
@router.callback_query(F.data == 'sell_apartment')
async def sell_apartment(callback: CallbackQuery):
    await callback.message.answer('üèô –í–∏ —Ö–æ—á–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç–∏ –∫–≤–∞—Ä—Ç–∏—Ä—É? –ß—É–¥–æ–≤–æ!\n'
                                  '–°–∫—ñ–ª—å–∫–∏ –∫—ñ–º–Ω–∞—Ç –º–∞—î –≤–∞—à–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞? üõè:', reply_markup=kb.apartment_type)

@router.callback_query(F.data.in_(['apartment_1', 'apartment_2', 'apartment_3', 'apartment_4', 'apartment_studio']))
async def sell_apartment_rooms(callback: CallbackQuery):
    await callback.message.answer('‚úÖ –í–∏ –æ–±—Ä–∞–ª–∏ –∫–≤–∞—Ä—Ç–∏—Ä—É –¥–ª—è –ø—Ä–æ–¥–∞–∂—É.\n'
                                  'üìç –¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å —Ä–∞–π–æ–Ω, –≤ —è–∫–æ–º—É –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –∫–≤–∞—Ä—Ç–∏—Ä–∞:', reply_markup=kb.district)

@router.callback_query(F.data == 'sell_house')
async def sell_house(callback: CallbackQuery):
    await callback.message.answer('üè† –í–∏ —Ö–æ—á–µ—Ç–µ –ø—Ä–æ–¥–∞—Ç–∏ –±—É–¥–∏–Ω–æ–∫? –ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –°–∫—ñ–ª—å–∫–∏ –ø–æ–≤–µ—Ä—Ö—ñ–≤ —É –≤–∞—à–æ–º—É –±—É–¥–∏–Ω–∫—É? üè¢', reply_markup=kb.house_floor)

@router.callback_query(F.data.in_(['one_floor', 'two_floors', 'three_floors']))
async def select_sell_house_type(callback: CallbackQuery):
    await callback.message.answer('‚ú® –ß—É–¥–æ–≤–æ! –í–∏ –æ–±—Ä–∞–ª–∏ —Ç–∏–ø –±—É–¥–∏–Ω–∫—É. \n'
                                  'üè† –°–∫—ñ–ª—å–∫–∏ –∫—ñ–º–Ω–∞—Ç —É –≤–∞—à–æ–º—É –±—É–¥–∏–Ω–∫—É? üõè', reply_markup=kb.house_rooms)

@router.callback_query(F.data.in_(['one_room', 'two_rooms', 'three_rooms_or_more']))
async def select_sell_house_rooms(callback: CallbackQuery):
    await callback.message.answer('‚úÖ –ß—É–¥–æ–≤–∏–π –≤–∏–±—ñ—Ä! –ö—ñ–ª—å–∫—ñ—Å—Ç—å –∫—ñ–º–Ω–∞—Ç –æ–±—Ä–∞–Ω–∞. \n'
                                  'üìç –¢–µ–ø–µ—Ä –æ–±–µ—Ä—ñ—Ç—å —Ä–∞–π–æ–Ω, –≤ —è–∫–æ–º—É –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤–∞—à –±—É–¥–∏–Ω–æ–∫:', reply_markup=kb.district)
